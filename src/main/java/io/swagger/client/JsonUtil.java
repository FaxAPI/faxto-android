/**
 * Fax.to REST API client for Android
 * This is Fax.to REST API client for Android.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import io.swagger.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("InlineResponse200".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse200>>(){}.getType();
    }
    
    if ("InlineResponse2001".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2001>>(){}.getType();
    }
    
    if ("InlineResponse20010".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20010>>(){}.getType();
    }
    
    if ("InlineResponse20011".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20011>>(){}.getType();
    }
    
    if ("InlineResponse20012".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20012>>(){}.getType();
    }
    
    if ("InlineResponse20012Data".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20012Data>>(){}.getType();
    }
    
    if ("InlineResponse20013".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20013>>(){}.getType();
    }
    
    if ("InlineResponse20013States".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20013States>>(){}.getType();
    }
    
    if ("InlineResponse20014".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20014>>(){}.getType();
    }
    
    if ("InlineResponse20014Areacodes".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20014Areacodes>>(){}.getType();
    }
    
    if ("InlineResponse20015".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20015>>(){}.getType();
    }
    
    if ("InlineResponse20015Data".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20015Data>>(){}.getType();
    }
    
    if ("InlineResponse20016".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20016>>(){}.getType();
    }
    
    if ("InlineResponse20016Data".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20016Data>>(){}.getType();
    }
    
    if ("InlineResponse20017".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20017>>(){}.getType();
    }
    
    if ("InlineResponse20017Numbers".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse20017Numbers>>(){}.getType();
    }
    
    if ("InlineResponse2002".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2002>>(){}.getType();
    }
    
    if ("InlineResponse2003".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2003>>(){}.getType();
    }
    
    if ("InlineResponse2003Created".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2003Created>>(){}.getType();
    }
    
    if ("InlineResponse2003History".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2003History>>(){}.getType();
    }
    
    if ("InlineResponse2004".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2004>>(){}.getType();
    }
    
    if ("InlineResponse2004Inbox".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2004Inbox>>(){}.getType();
    }
    
    if ("InlineResponse2004Meta".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2004Meta>>(){}.getType();
    }
    
    if ("InlineResponse2004MetaPagination".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2004MetaPagination>>(){}.getType();
    }
    
    if ("InlineResponse2004MetaPaginationLinks".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2004MetaPaginationLinks>>(){}.getType();
    }
    
    if ("InlineResponse2005".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2005>>(){}.getType();
    }
    
    if ("InlineResponse2006".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2006>>(){}.getType();
    }
    
    if ("InlineResponse2007".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2007>>(){}.getType();
    }
    
    if ("InlineResponse2008".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2008>>(){}.getType();
    }
    
    if ("InlineResponse2008Files".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2008Files>>(){}.getType();
    }
    
    if ("InlineResponse2009".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse2009>>(){}.getType();
    }
    
    if ("InlineResponse400".equalsIgnoreCase(className)) {
      return new TypeToken<List<InlineResponse400>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("InlineResponse200".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse200>(){}.getType();
    }
    
    if ("InlineResponse2001".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2001>(){}.getType();
    }
    
    if ("InlineResponse20010".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20010>(){}.getType();
    }
    
    if ("InlineResponse20011".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20011>(){}.getType();
    }
    
    if ("InlineResponse20012".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20012>(){}.getType();
    }
    
    if ("InlineResponse20012Data".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20012Data>(){}.getType();
    }
    
    if ("InlineResponse20013".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20013>(){}.getType();
    }
    
    if ("InlineResponse20013States".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20013States>(){}.getType();
    }
    
    if ("InlineResponse20014".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20014>(){}.getType();
    }
    
    if ("InlineResponse20014Areacodes".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20014Areacodes>(){}.getType();
    }
    
    if ("InlineResponse20015".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20015>(){}.getType();
    }
    
    if ("InlineResponse20015Data".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20015Data>(){}.getType();
    }
    
    if ("InlineResponse20016".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20016>(){}.getType();
    }
    
    if ("InlineResponse20016Data".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20016Data>(){}.getType();
    }
    
    if ("InlineResponse20017".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20017>(){}.getType();
    }
    
    if ("InlineResponse20017Numbers".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse20017Numbers>(){}.getType();
    }
    
    if ("InlineResponse2002".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2002>(){}.getType();
    }
    
    if ("InlineResponse2003".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2003>(){}.getType();
    }
    
    if ("InlineResponse2003Created".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2003Created>(){}.getType();
    }
    
    if ("InlineResponse2003History".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2003History>(){}.getType();
    }
    
    if ("InlineResponse2004".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2004>(){}.getType();
    }
    
    if ("InlineResponse2004Inbox".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2004Inbox>(){}.getType();
    }
    
    if ("InlineResponse2004Meta".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2004Meta>(){}.getType();
    }
    
    if ("InlineResponse2004MetaPagination".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2004MetaPagination>(){}.getType();
    }
    
    if ("InlineResponse2004MetaPaginationLinks".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2004MetaPaginationLinks>(){}.getType();
    }
    
    if ("InlineResponse2005".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2005>(){}.getType();
    }
    
    if ("InlineResponse2006".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2006>(){}.getType();
    }
    
    if ("InlineResponse2007".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2007>(){}.getType();
    }
    
    if ("InlineResponse2008".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2008>(){}.getType();
    }
    
    if ("InlineResponse2008Files".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2008Files>(){}.getType();
    }
    
    if ("InlineResponse2009".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse2009>(){}.getType();
    }
    
    if ("InlineResponse400".equalsIgnoreCase(className)) {
      return new TypeToken<InlineResponse400>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
