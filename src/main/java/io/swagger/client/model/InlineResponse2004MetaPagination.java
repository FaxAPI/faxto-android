/**
 * Fax.to REST API client for Android
 * This is Fax.to REST API client for Android.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.InlineResponse2004MetaPaginationLinks;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The pagination data
 **/
@ApiModel(description = "The pagination data")
public class InlineResponse2004MetaPagination {
  
  @SerializedName("total")
  private Integer total = null;
  @SerializedName("count")
  private Integer count = null;
  @SerializedName("per_page")
  private Integer perPage = null;
  @SerializedName("current_page")
  private Integer currentPage = null;
  @SerializedName("total_pages")
  private Integer totalPages = null;
  @SerializedName("links")
  private InlineResponse2004MetaPaginationLinks links = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getTotal() {
    return total;
  }
  public void setTotal(Integer total) {
    this.total = total;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getCount() {
    return count;
  }
  public void setCount(Integer count) {
    this.count = count;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getPerPage() {
    return perPage;
  }
  public void setPerPage(Integer perPage) {
    this.perPage = perPage;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getCurrentPage() {
    return currentPage;
  }
  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getTotalPages() {
    return totalPages;
  }
  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public InlineResponse2004MetaPaginationLinks getLinks() {
    return links;
  }
  public void setLinks(InlineResponse2004MetaPaginationLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004MetaPagination inlineResponse2004MetaPagination = (InlineResponse2004MetaPagination) o;
    return (this.total == null ? inlineResponse2004MetaPagination.total == null : this.total.equals(inlineResponse2004MetaPagination.total)) &&
        (this.count == null ? inlineResponse2004MetaPagination.count == null : this.count.equals(inlineResponse2004MetaPagination.count)) &&
        (this.perPage == null ? inlineResponse2004MetaPagination.perPage == null : this.perPage.equals(inlineResponse2004MetaPagination.perPage)) &&
        (this.currentPage == null ? inlineResponse2004MetaPagination.currentPage == null : this.currentPage.equals(inlineResponse2004MetaPagination.currentPage)) &&
        (this.totalPages == null ? inlineResponse2004MetaPagination.totalPages == null : this.totalPages.equals(inlineResponse2004MetaPagination.totalPages)) &&
        (this.links == null ? inlineResponse2004MetaPagination.links == null : this.links.equals(inlineResponse2004MetaPagination.links));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.count == null ? 0: this.count.hashCode());
    result = 31 * result + (this.perPage == null ? 0: this.perPage.hashCode());
    result = 31 * result + (this.currentPage == null ? 0: this.currentPage.hashCode());
    result = 31 * result + (this.totalPages == null ? 0: this.totalPages.hashCode());
    result = 31 * result + (this.links == null ? 0: this.links.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004MetaPagination {\n");
    
    sb.append("  total: ").append(total).append("\n");
    sb.append("  count: ").append(count).append("\n");
    sb.append("  perPage: ").append(perPage).append("\n");
    sb.append("  currentPage: ").append(currentPage).append("\n");
    sb.append("  totalPages: ").append(totalPages).append("\n");
    sb.append("  links: ").append(links).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
