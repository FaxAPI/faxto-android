/**
 * Fax.to REST API client for Android
 * This is Fax.to REST API client for Android.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * The pagination links
 **/
@ApiModel(description = "The pagination links")
public class InlineResponse2004MetaPaginationLinks {
  
  @SerializedName("previous")
  private String previous = null;
  @SerializedName("next")
  private String next = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPrevious() {
    return previous;
  }
  public void setPrevious(String previous) {
    this.previous = previous;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getNext() {
    return next;
  }
  public void setNext(String next) {
    this.next = next;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004MetaPaginationLinks inlineResponse2004MetaPaginationLinks = (InlineResponse2004MetaPaginationLinks) o;
    return (this.previous == null ? inlineResponse2004MetaPaginationLinks.previous == null : this.previous.equals(inlineResponse2004MetaPaginationLinks.previous)) &&
        (this.next == null ? inlineResponse2004MetaPaginationLinks.next == null : this.next.equals(inlineResponse2004MetaPaginationLinks.next));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.previous == null ? 0: this.previous.hashCode());
    result = 31 * result + (this.next == null ? 0: this.next.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004MetaPaginationLinks {\n");
    
    sb.append("  previous: ").append(previous).append("\n");
    sb.append("  next: ").append(next).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
