/**
 * Fax.to REST API client for Android
 * This is Fax.to REST API client for Android.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.InlineResponse2003Created;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineResponse2004Inbox {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("did_id")
  private Integer didId = null;
  @SerializedName("filename")
  private String filename = null;
  @SerializedName("filesize")
  private String filesize = null;
  @SerializedName("number")
  private String number = null;
  @SerializedName("sender")
  private String sender = null;
  @SerializedName("total_pages")
  private Integer totalPages = null;
  @SerializedName("created_at")
  private InlineResponse2003Created createdAt = null;
  @SerializedName("preview_file")
  private String previewFile = null;
  @SerializedName("file_url")
  private String fileUrl = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getDidId() {
    return didId;
  }
  public void setDidId(Integer didId) {
    this.didId = didId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getFilename() {
    return filename;
  }
  public void setFilename(String filename) {
    this.filename = filename;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getFilesize() {
    return filesize;
  }
  public void setFilesize(String filesize) {
    this.filesize = filesize;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getNumber() {
    return number;
  }
  public void setNumber(String number) {
    this.number = number;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSender() {
    return sender;
  }
  public void setSender(String sender) {
    this.sender = sender;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getTotalPages() {
    return totalPages;
  }
  public void setTotalPages(Integer totalPages) {
    this.totalPages = totalPages;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public InlineResponse2003Created getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(InlineResponse2003Created createdAt) {
    this.createdAt = createdAt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPreviewFile() {
    return previewFile;
  }
  public void setPreviewFile(String previewFile) {
    this.previewFile = previewFile;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getFileUrl() {
    return fileUrl;
  }
  public void setFileUrl(String fileUrl) {
    this.fileUrl = fileUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004Inbox inlineResponse2004Inbox = (InlineResponse2004Inbox) o;
    return (this.id == null ? inlineResponse2004Inbox.id == null : this.id.equals(inlineResponse2004Inbox.id)) &&
        (this.didId == null ? inlineResponse2004Inbox.didId == null : this.didId.equals(inlineResponse2004Inbox.didId)) &&
        (this.filename == null ? inlineResponse2004Inbox.filename == null : this.filename.equals(inlineResponse2004Inbox.filename)) &&
        (this.filesize == null ? inlineResponse2004Inbox.filesize == null : this.filesize.equals(inlineResponse2004Inbox.filesize)) &&
        (this.number == null ? inlineResponse2004Inbox.number == null : this.number.equals(inlineResponse2004Inbox.number)) &&
        (this.sender == null ? inlineResponse2004Inbox.sender == null : this.sender.equals(inlineResponse2004Inbox.sender)) &&
        (this.totalPages == null ? inlineResponse2004Inbox.totalPages == null : this.totalPages.equals(inlineResponse2004Inbox.totalPages)) &&
        (this.createdAt == null ? inlineResponse2004Inbox.createdAt == null : this.createdAt.equals(inlineResponse2004Inbox.createdAt)) &&
        (this.previewFile == null ? inlineResponse2004Inbox.previewFile == null : this.previewFile.equals(inlineResponse2004Inbox.previewFile)) &&
        (this.fileUrl == null ? inlineResponse2004Inbox.fileUrl == null : this.fileUrl.equals(inlineResponse2004Inbox.fileUrl));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.didId == null ? 0: this.didId.hashCode());
    result = 31 * result + (this.filename == null ? 0: this.filename.hashCode());
    result = 31 * result + (this.filesize == null ? 0: this.filesize.hashCode());
    result = 31 * result + (this.number == null ? 0: this.number.hashCode());
    result = 31 * result + (this.sender == null ? 0: this.sender.hashCode());
    result = 31 * result + (this.totalPages == null ? 0: this.totalPages.hashCode());
    result = 31 * result + (this.createdAt == null ? 0: this.createdAt.hashCode());
    result = 31 * result + (this.previewFile == null ? 0: this.previewFile.hashCode());
    result = 31 * result + (this.fileUrl == null ? 0: this.fileUrl.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004Inbox {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  didId: ").append(didId).append("\n");
    sb.append("  filename: ").append(filename).append("\n");
    sb.append("  filesize: ").append(filesize).append("\n");
    sb.append("  number: ").append(number).append("\n");
    sb.append("  sender: ").append(sender).append("\n");
    sb.append("  totalPages: ").append(totalPages).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  previewFile: ").append(previewFile).append("\n");
    sb.append("  fileUrl: ").append(fileUrl).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
